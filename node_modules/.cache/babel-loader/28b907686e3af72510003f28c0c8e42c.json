{"remainingRequest":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\babel-loader\\lib\\index.js!D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\nowcoder\\Nowcoding-vue\\src\\components\\Register\\RegisterMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\src\\components\\Register\\RegisterMain.vue","mtime":1581482558629},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciB2YWxpZGF0ZVBhc3MgPSBmdW5jdGlvbiB2YWxpZGF0ZVBhc3MocnVsZSwgdmFsdWUsIGNhbGxiYWNrKSB7CiAgICAgIGlmICh2YWx1ZSA9PT0gJycpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+i+k+WFpeWvhueggScpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoX3RoaXMucnVsZUZvcm0uY2hlY2tQYXNzICE9PSAnJykgewogICAgICAgICAgX3RoaXMuJHJlZnMucnVsZUZvcm0udmFsaWRhdGVGaWVsZCgnY2hlY2tQYXNzJyk7CiAgICAgICAgfQoKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwoKICAgIHZhciB2YWxpZGF0ZVBhc3MyID0gZnVuY3Rpb24gdmFsaWRhdGVQYXNzMihydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgaWYgKHZhbHVlID09PSAnJykgewogICAgICAgIGNhbGxiYWNrKG5ldyBFcnJvcign6K+35YaN5qyh6L6T5YWl5a+G56CBJykpOwogICAgICB9IGVsc2UgaWYgKHZhbHVlICE9PSBfdGhpcy5ydWxlRm9ybS5wYXNzKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfkuKTmrKHovpPlhaXlr4bnoIHkuI3kuIDoh7QhJykpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH07CgogICAgdmFyIGNoZWNrRW1haWwgPSBmdW5jdGlvbiBjaGVja0VtYWlsKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgewogICAgICBpZiAoIXZhbHVlKSB7CiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7fovpPlhaXpgq7nrrEnKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgfQogICAgfTsKCiAgICByZXR1cm4gewogICAgICBydWxlRm9ybTogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHBhc3M6ICcnLAogICAgICAgIGNoZWNrUGFzczogJycsCiAgICAgICAgZW1haWw6ICcnLAogICAgICAgIHZlcmlmeUNvZGU6ICcnCiAgICAgIH0sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgcGFzczogW3sKICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdGVQYXNzLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgY2hlY2tQYXNzOiBbewogICAgICAgICAgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MyLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0sCiAgICAgICAgZW1haWw6IFt7CiAgICAgICAgICB2YWxpZGF0b3I6IGNoZWNrRW1haWwsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XQogICAgICB9CiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgc3VibWl0Rm9ybTogZnVuY3Rpb24gc3VibWl0Rm9ybShmb3JtTmFtZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgY29uc29sZS5sb2coJ2Zvcm0gaXM6JyArIEpTT04uc3RyaW5naWZ5KF90aGlzMi5ydWxlRm9ybSkpOyAvLyDmjIflrprorr/pl67nmoRVUkwKCiAgICAgICAgICB2YXIgdXJsID0gJy9jb21tdW5pdHkvYWxwaGEvc3R1ZGVudCc7CgogICAgICAgICAgX3RoaXMyLiRheGlvcyh7CiAgICAgICAgICAgIC8vIOaMh+WumlBPU1Tmlrnms5UKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIC8vIOaMh+WumuaVsOaNruagvOW8jwogICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nLAogICAgICAgICAgICAvLyDmjIflrprorr/pl67nmoRVUkwKICAgICAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgICAgIC8vIOaMh+WummhlYWRlcgogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIOWwhmRhdGHkuK3nmoRmb3Jt5a2Y5YWlYXhpb3MuUE9TVOivt+axgueahOaVsOaNruiKgueCueS4rQogICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShfdGhpczIucnVsZUZvcm0pIC8vIHRoZW4tPuaOpeaUtui/lOWbnuWTjeW6lAoKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOyAvLyDlsIblk43lupRyZXPmiZPljbDlh7rmnaUKCiAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhLmNvZGUpKTsKICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgICBtZXNzYWdlOiAn6K+35a6M5ZaE5L+h5oGvJywKICAgICAgICAgICAgdHlwZTogJ2Vycm9yJwogICAgICAgICAgfSk7CgogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgU2VuZFZlcmlmeUNvZGU6IGZ1bmN0aW9uIFNlbmRWZXJpZnlDb2RlKCkgewogICAgICB2YXIgdm0gPSB0aGlzOyAvLyDlnKhheGlvc+eahHRoZW7mlrnms5XkuK10aGlz5Lya5aSx5pWI77yM5q2k5aSE5L2/55Sodm3kv53lrZh0aGlz5oyH6ZKICgogICAgICBjb25zb2xlLmxvZygnc2VuZCBjb2RlIHRvICcgKyB0aGlzLnJ1bGVGb3JtLmVtYWlsKTsgLy8g5oyH5a6a6K6/6Zeu55qEVVJMCgogICAgICB2YXIgdXJsID0gJy9jb21tdW5pdHkvZ2V0VmVyaWZ5Q29kZSc7CiAgICAgIHRoaXMuZW1haWxWZXJpZnkuZW1haWwgPSB0aGlzLnJ1bGVGb3JtLmVtYWlsOwogICAgICB0aGlzLiRheGlvcyh7CiAgICAgICAgLy8g5oyH5a6aUE9TVOaWueazlQogICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgIC8vIOaMh+WumuaVsOaNruagvOW8jwogICAgICAgIGRhdGFUeXBlOiAnanNvbicsCiAgICAgICAgLy8g5oyH5a6a6K6/6Zeu55qEVVJMCiAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgLy8g5oyH5a6aaGVhZGVyCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnCiAgICAgICAgfSwKICAgICAgICAvLyDlsIZkYXRh5Lit55qEZm9ybeWtmOWFpWF4aW9zLlBPU1Tor7fmsYLnmoTmlbDmja7oioLngrnkuK0KICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh0aGlzLmVtYWlsVmVyaWZ5KSAvLyB0aGVuLT7mjqXmlLbov5Tlm57lk43lupQKCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKHJlcyk7IC8vIOWwhuWTjeW6lHJlc+aJk+WNsOWHuuadpQoKICAgICAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyZXMuZGF0YS5yZWFzb24pKTsKICAgICAgICB2YXIgc3RhdHVzID0gJyc7IC8vIOS9v+eUqHN0YXR1c+adpeaOp+WItiRNZXNzYWdl55qE5o+Q56S657G75Z6LCgogICAgICAgIGlmIChKU09OLnN0cmluZ2lmeShyZXMuZGF0YS5zdGF0dXMpID09PSAnMScpIHsKICAgICAgICAgIHN0YXR1cyA9ICdlcnJvcic7IC8vIOWTjeW6lOeggeS4ujHvvIzmj5DnpLrnsbvlnovkuLrplJnor68KICAgICAgICB9IGVsc2UgewogICAgICAgICAgc3RhdHVzID0gJ3N1Y2Nlc3MnOyAvLyDlk43lupTnoIHkuLow77yM5o+Q56S657G75Z6L5Li65oiQ5YqfCiAgICAgICAgfQoKICAgICAgICB2bS4kbWVzc2FnZSh7CiAgICAgICAgICBtZXNzYWdlOiBKU09OLnN0cmluZ2lmeShyZXMuZGF0YS5yZWFzb24pLAogICAgICAgICAgLy8g5Y+W5ZCO5Y+w6L+U5Zue55qE5ZON5bqU5L+h5oGvCiAgICAgICAgICB0eXBlOiBzdGF0dXMgLy8g5oyH5a6a5ZON5bqU57G75Z6LCgogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICB2bS4kbWVzc2FnZSh7CiAgICAgICAgICBtZXNzYWdlOiBlcnIsCiAgICAgICAgICAvLyDlj5blkI7lj7Dov5Tlm57nmoTlk43lupTkv6Hmga8KICAgICAgICAgIHR5cGU6ICdlcnJvcicgLy8g5oyH5a6a5ZON5bqU57G75Z6LCgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICByZXNldEZvcm06IGZ1bmN0aW9uIHJlc2V0Rm9ybShmb3JtTmFtZSkgewogICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["RegisterMain.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 注册页页头 -->\r\n    <h1 class=\"register-header\">\r\n      注册\r\n    </h1>\r\n    <el-divider></el-divider>\r\n    <!-- 使用element-ui的表单来实现注册页主体 -->\r\n    <div class=\"register-form\">\r\n      <el-form\r\n        ref=\"ruleForm\"\r\n        :model=\"ruleForm\"\r\n        :rules=\"rules\"\r\n        status-icon\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"name\">\r\n          <el-input v-model=\"ruleForm.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"pass\">\r\n          <el-input\r\n            v-model=\"ruleForm.pass\"\r\n            type=\"password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input\r\n            v-model=\"ruleForm.checkPass\"\r\n            type=\"password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model.number=\"ruleForm.email\"></el-input>\r\n          <el-button :plain=\"true\" @click=\"SendVerifyCode\">\r\n            发送验证码\r\n          </el-button>\r\n        </el-form-item>\r\n        <el-form-item label=\"验证码\" prop=\"verifyCode\">\r\n          <el-input v-model.number=\"ruleForm.verifyCode\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"submitForm('ruleForm')\" type=\"primary\">\r\n            提交\r\n          </el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">\r\n            重置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    const validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const checkEmail = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('请输入邮箱'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      ruleForm: {\r\n        name: '',\r\n        pass: '',\r\n        checkPass: '',\r\n        email: '',\r\n        verifyCode: ''\r\n      },\r\n      rules: {\r\n        pass: [{ validator: validatePass, trigger: 'blur' }],\r\n        checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n        email: [{ validator: checkEmail, trigger: 'blur' }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          console.log('form is:' + JSON.stringify(this.ruleForm));\r\n          // 指定访问的URL\r\n          const url = '/community/alpha/student';\r\n          this.$axios({\r\n            // 指定POST方法\r\n            method: 'POST',\r\n            // 指定数据格式\r\n            dataType: 'json',\r\n            // 指定访问的URL\r\n            url: url,\r\n            // 指定header\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=UTF-8'\r\n            },\r\n            // 将data中的form存入axios.POST请求的数据节点中\r\n            data: JSON.stringify(this.ruleForm)\r\n            // then->接收返回响应\r\n          })\r\n            .then(function(res) {\r\n              console.log(res);\r\n              // 将响应res打印出来\r\n              console.log(JSON.stringify(res.data.code));\r\n            })\r\n            .catch(function(err) {\r\n              console.log(err);\r\n            });\r\n        } else {\r\n          this.$message({\r\n            message: '请完善信息',\r\n            type: 'error'\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    SendVerifyCode() {\r\n      const vm = this; // 在axios的then方法中this会失效，此处使用vm保存this指针\r\n      console.log('send code to ' + this.ruleForm.email);\r\n      // 指定访问的URL\r\n      const url = '/community/getVerifyCode';\r\n      this.emailVerify.email = this.ruleForm.email;\r\n      this.$axios({\r\n        // 指定POST方法\r\n        method: 'POST',\r\n        // 指定数据格式\r\n        dataType: 'json',\r\n        // 指定访问的URL\r\n        url: url,\r\n        // 指定header\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8'\r\n        },\r\n        // 将data中的form存入axios.POST请求的数据节点中\r\n        data: JSON.stringify(this.emailVerify)\r\n        // then->接收返回响应\r\n      })\r\n        .then(function(res) {\r\n          console.log(res);\r\n          // 将响应res打印出来\r\n          console.log(JSON.stringify(res.data.reason));\r\n          let status = ''; // 使用status来控制$Message的提示类型\r\n          if (JSON.stringify(res.data.status) === '1') {\r\n            status = 'error'; // 响应码为1，提示类型为错误\r\n          } else {\r\n            status = 'success'; // 响应码为0，提示类型为成功\r\n          }\r\n          vm.$message({\r\n            message: JSON.stringify(res.data.reason), // 取后台返回的响应信息\r\n            type: status // 指定响应类型\r\n          });\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n          vm.$message({\r\n            message: err, // 取后台返回的响应信息\r\n            type: 'error' // 指定响应类型\r\n          });\r\n        });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.register-header {\r\n  text-align: center;\r\n  font-size: 30px;\r\n  color: rgb(48, 214, 214);\r\n}\r\n.register-form {\r\n  padding-left: 350px;\r\n  padding-right: 350px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Register"}]}