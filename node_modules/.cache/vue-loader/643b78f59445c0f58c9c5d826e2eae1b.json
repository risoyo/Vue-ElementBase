{"remainingRequest":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\nowcoder\\Nowcoding-vue\\src\\components\\Register\\RegisterMain.vue?vue&type=template&id=230d6f08&","dependencies":[{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\src\\components\\Register\\RegisterMain.vue","mtime":1581476844438},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h1\", { staticClass: \"register-header\" }, [_vm._v(\"注册\")]),\n      _c(\"el-divider\"),\n      _c(\n        \"div\",\n        { staticClass: \"register-form\" },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"ruleForm\",\n              staticClass: \"demo-ruleForm\",\n              attrs: {\n                model: _vm.ruleForm,\n                \"status-icon\": \"\",\n                rules: _vm.rules,\n                \"label-width\": \"100px\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"用户名\", prop: \"name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { autocomplete: \"off\" },\n                    model: {\n                      value: _vm.ruleForm.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"name\", $$v)\n                      },\n                      expression: \"ruleForm.name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"密码\", prop: \"pass\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"password\", autocomplete: \"off\" },\n                    model: {\n                      value: _vm.ruleForm.pass,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"pass\", $$v)\n                      },\n                      expression: \"ruleForm.pass\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"确认密码\", prop: \"checkPass\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"password\", autocomplete: \"off\" },\n                    model: {\n                      value: _vm.ruleForm.checkPass,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"checkPass\", $$v)\n                      },\n                      expression: \"ruleForm.checkPass\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"邮箱\", prop: \"email\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.ruleForm.email,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"email\", _vm._n($$v))\n                      },\n                      expression: \"ruleForm.email\"\n                    }\n                  }),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { plain: true },\n                      on: { click: _vm.SendVerifyCode }\n                    },\n                    [_vm._v(\"发送验证码\")]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"验证码\", prop: \"verifyCode\" } },\n                [\n                  _c(\"el-input\", {\n                    model: {\n                      value: _vm.ruleForm.verifyCode,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm, \"verifyCode\", _vm._n($$v))\n                      },\n                      expression: \"ruleForm.verifyCode\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.submitForm(\"ruleForm\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"提交\")]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function($event) {\n                          return _vm.resetForm(\"ruleForm\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"重置\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}