{"remainingRequest":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project\\nowcoder\\Nowcoding-vue\\src\\components\\Register\\RegisterMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\src\\components\\Register\\RegisterMain.vue","mtime":1581521117841},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project\\nowcoder\\Nowcoding-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgY29uc3QgdmFsaWRhdGVQYXNzID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gew0KICAgICAgaWYgKHZhbHVlID09PSAnJykgew0KICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+i+k+WFpeWvhueggScpKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGlmICh0aGlzLnJ1bGVGb3JtLmNoZWNrUGFzcyAhPT0gJycpIHsNCiAgICAgICAgICB0aGlzLiRyZWZzLnJ1bGVGb3JtLnZhbGlkYXRlRmllbGQoJ2NoZWNrUGFzcycpOw0KICAgICAgICB9DQogICAgICAgIGNhbGxiYWNrKCk7DQogICAgICB9DQogICAgfTsNCiAgICBjb25zdCB2YWxpZGF0ZVBhc3MyID0gKHJ1bGUsIHZhbHVlLCBjYWxsYmFjaykgPT4gew0KICAgICAgaWYgKHZhbHVlID09PSAnJykgew0KICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+ivt+WGjeasoei+k+WFpeWvhueggScpKTsNCiAgICAgIH0gZWxzZSBpZiAodmFsdWUgIT09IHRoaXMucnVsZUZvcm0ucGFzcykgew0KICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+S4pOasoei+k+WFpeWvhueggeS4jeS4gOiHtCEnKSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBjYWxsYmFjaygpOw0KICAgICAgfQ0KICAgIH07DQogICAgY29uc3QgY2hlY2tFbWFpbCA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsNCiAgICAgIGlmICghdmFsdWUpIHsNCiAgICAgICAgY2FsbGJhY2sobmV3IEVycm9yKCfor7fovpPlhaXpgq7nrrEnKSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICBjYWxsYmFjaygpOw0KICAgICAgfQ0KICAgIH07DQogICAgcmV0dXJuIHsNCiAgICAgIHJ1bGVGb3JtOiB7DQogICAgICAgIG5hbWU6ICcnLA0KICAgICAgICBwYXNzOiAnJywNCiAgICAgICAgY2hlY2tQYXNzOiAnJywNCiAgICAgICAgZW1haWw6ICcnLA0KICAgICAgICB2ZXJpZnlDb2RlOiAnJw0KICAgICAgfSwNCiAgICAgIHJ1bGVzOiB7DQogICAgICAgIHBhc3M6IFt7IHZhbGlkYXRvcjogdmFsaWRhdGVQYXNzLCB0cmlnZ2VyOiAnYmx1cicgfV0sDQogICAgICAgIGNoZWNrUGFzczogW3sgdmFsaWRhdG9yOiB2YWxpZGF0ZVBhc3MyLCB0cmlnZ2VyOiAnYmx1cicgfV0sDQogICAgICAgIGVtYWlsOiBbeyB2YWxpZGF0b3I6IGNoZWNrRW1haWwsIHRyaWdnZXI6ICdibHVyJyB9XQ0KICAgICAgfQ0KICAgIH07DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBzdWJtaXRGb3JtKGZvcm1OYW1lKSB7DQogICAgICBjb25zdCB2bSA9IHRoaXM7IC8vIOWcqGF4aW9z55qEdGhlbuaWueazleS4rXRoaXPkvJrlpLHmlYjvvIzmraTlpITkvb/nlKh2beS/neWtmHRoaXPmjIfpkogNCiAgICAgIHRoaXMuJHJlZnNbZm9ybU5hbWVdLnZhbGlkYXRlKHZhbGlkID0+IHsNCiAgICAgICAgaWYgKHZhbGlkKSB7DQogICAgICAgICAgY29uc29sZS5sb2coJ2Zvcm0gaXM6JyArIEpTT04uc3RyaW5naWZ5KHRoaXMucnVsZUZvcm0pKTsNCiAgICAgICAgICAvLyDmjIflrprorr/pl67nmoRVUkwNCiAgICAgICAgICBjb25zdCB1cmwgPSAnL2NvbW11bml0eS91c2VyUmVnaXN0JzsNCiAgICAgICAgICB0aGlzLiRheGlvcyh7DQogICAgICAgICAgICAvLyDmjIflrppQT1NU5pa55rOVDQogICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywNCiAgICAgICAgICAgIC8vIOaMh+WumuaVsOaNruagvOW8jw0KICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29uJywNCiAgICAgICAgICAgIC8vIOaMh+Wumuiuv+mXrueahFVSTA0KICAgICAgICAgICAgdXJsOiB1cmwsDQogICAgICAgICAgICAvLyDmjIflrppoZWFkZXINCiAgICAgICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgLy8g5bCGZGF0YeS4reeahGZvcm3lrZjlhaVheGlvcy5QT1NU6K+35rGC55qE5pWw5o2u6IqC54K55LitDQogICAgICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh0aGlzLnJ1bGVGb3JtKQ0KICAgICAgICAgICAgLy8gdGhlbi0+5o6l5pS26L+U5Zue5ZON5bqUDQogICAgICAgICAgfSkNCiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlcykgew0KICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOw0KICAgICAgICAgICAgICAvLyDlsIblk43lupRyZXPmiZPljbDlh7rmnaUNCiAgICAgICAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEucmVzcF9jb2RlKSk7DQogICAgICAgICAgICAgIGxldCBzdGF0dXMgPSAnJzsgLy8g5L2/55Soc3RhdHVz5p2l5o6n5Yi2JE1lc3NhZ2XnmoTmj5DnpLrnsbvlnosNCiAgICAgICAgICAgICAgaWYgKEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhLnJlc3BfY29kZSkgIT09ICciMDAwMDAwIicpIHsNCiAgICAgICAgICAgICAgICBzdGF0dXMgPSAnZXJyb3InOyAvLyDlk43lupTnoIHkuLox77yM5o+Q56S657G75Z6L5Li66ZSZ6K+vDQogICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgc3RhdHVzID0gJ3N1Y2Nlc3MnOyAvLyDlk43lupTnoIHkuLow77yM5o+Q56S657G75Z6L5Li65oiQ5YqfDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgdm0uJG1lc3NhZ2Uoew0KICAgICAgICAgICAgICAgIG1lc3NhZ2U6IEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhLnJlc3BfaW5mbyksIC8vIOWPluWQjuWPsOi/lOWbnueahOWTjeW6lOS/oeaBrw0KICAgICAgICAgICAgICAgIHR5cGU6IHN0YXR1cyAvLyDmjIflrprlk43lupTnsbvlnosNCiAgICAgICAgICAgICAgfSk7DQogICAgICAgICAgICAgIHZtLiRyb3V0ZXIucHVzaCgnTG9naW4nKTsNCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyKSB7DQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7DQogICAgICAgICAgICAgIHZtLiRtZXNzYWdlKHsNCiAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIsIC8vIOWPluWQjuWPsOi/lOWbnueahOWTjeW6lOS/oeaBrw0KICAgICAgICAgICAgICAgIHR5cGU6ICdlcnJvcicgLy8g5oyH5a6a5ZON5bqU57G75Z6LDQogICAgICAgICAgICAgIH0pOw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7DQogICAgICAgICAgICBtZXNzYWdlOiAn6K+35a6M5ZaE5L+h5oGvJywNCiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicNCiAgICAgICAgICB9KTsNCiAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0sDQogICAgU2VuZFZlcmlmeUNvZGUoKSB7DQogICAgICBjb25zdCB2bSA9IHRoaXM7IC8vIOWcqGF4aW9z55qEdGhlbuaWueazleS4rXRoaXPkvJrlpLHmlYjvvIzmraTlpITkvb/nlKh2beS/neWtmHRoaXPmjIfpkogNCiAgICAgIGNvbnNvbGUubG9nKCdzZW5kIGNvZGUgdG8gJyArIHRoaXMucnVsZUZvcm0uZW1haWwpOw0KICAgICAgLy8g5oyH5a6a6K6/6Zeu55qEVVJMDQogICAgICBjb25zdCB1cmwgPSAnL2NvbW11bml0eS9nZXRWZXJpZnlDb2RlJzsNCiAgICAgIHRoaXMuZW1haWxWZXJpZnkuZW1haWwgPSB0aGlzLnJ1bGVGb3JtLmVtYWlsOw0KICAgICAgdGhpcy4kYXhpb3Moew0KICAgICAgICAvLyDmjIflrppQT1NU5pa55rOVDQogICAgICAgIG1ldGhvZDogJ1BPU1QnLA0KICAgICAgICAvLyDmjIflrprmlbDmja7moLzlvI8NCiAgICAgICAgZGF0YVR5cGU6ICdqc29uJywNCiAgICAgICAgLy8g5oyH5a6a6K6/6Zeu55qEVVJMDQogICAgICAgIHVybDogdXJsLA0KICAgICAgICAvLyDmjIflrppoZWFkZXINCiAgICAgICAgaGVhZGVyczogew0KICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04Jw0KICAgICAgICB9LA0KICAgICAgICAvLyDlsIZkYXRh5Lit55qEZm9ybeWtmOWFpWF4aW9zLlBPU1Tor7fmsYLnmoTmlbDmja7oioLngrnkuK0NCiAgICAgICAgZGF0YTogSlNPTi5zdHJpbmdpZnkodGhpcy5lbWFpbFZlcmlmeSkNCiAgICAgICAgLy8gdGhlbi0+5o6l5pS26L+U5Zue5ZON5bqUDQogICAgICB9KQ0KICAgICAgICAudGhlbihmdW5jdGlvbihyZXMpIHsNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpOw0KICAgICAgICAgIC8vIOWwhuWTjeW6lHJlc+aJk+WNsOWHuuadpQ0KICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHJlcy5kYXRhLnJlc3BfaW5mbykpOw0KICAgICAgICAgIGxldCBzdGF0dXMgPSAnJzsgLy8g5L2/55Soc3RhdHVz5p2l5o6n5Yi2JE1lc3NhZ2XnmoTmj5DnpLrnsbvlnosNCiAgICAgICAgICBpZiAoSlNPTi5zdHJpbmdpZnkocmVzLmRhdGEucmVzcF9jb2RlKSAhPT0gJzAnKSB7DQogICAgICAgICAgICBzdGF0dXMgPSAnZXJyb3InOyAvLyDlk43lupTnoIHkuLox77yM5o+Q56S657G75Z6L5Li66ZSZ6K+vDQogICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgIHN0YXR1cyA9ICdzdWNjZXNzJzsgLy8g5ZON5bqU56CB5Li6MO+8jOaPkOekuuexu+Wei+S4uuaIkOWKnw0KICAgICAgICAgIH0NCiAgICAgICAgICB2bS4kbWVzc2FnZSh7DQogICAgICAgICAgICBtZXNzYWdlOiBKU09OLnN0cmluZ2lmeShyZXMuZGF0YS5yZXNwX2luZm8pLCAvLyDlj5blkI7lj7Dov5Tlm57nmoTlk43lupTkv6Hmga8NCiAgICAgICAgICAgIHR5cGU6IHN0YXR1cyAvLyDmjIflrprlk43lupTnsbvlnosNCiAgICAgICAgICB9KTsNCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycikgew0KICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7DQogICAgICAgICAgdm0uJG1lc3NhZ2Uoew0KICAgICAgICAgICAgbWVzc2FnZTogZXJyLCAvLyDlj5blkI7lj7Dov5Tlm57nmoTlk43lupTkv6Hmga8NCiAgICAgICAgICAgIHR5cGU6ICdlcnJvcicgLy8g5oyH5a6a5ZON5bqU57G75Z6LDQogICAgICAgICAgfSk7DQogICAgICAgIH0pOw0KICAgIH0sDQogICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7DQogICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["RegisterMain.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"RegisterMain.vue","sourceRoot":"src/components/Register","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 注册页页头 -->\r\n    <h1 class=\"register-header\">\r\n      注册\r\n    </h1>\r\n    <el-divider></el-divider>\r\n    <!-- 使用element-ui的表单来实现注册页主体 -->\r\n    <div class=\"register-form\">\r\n      <el-form\r\n        ref=\"ruleForm\"\r\n        :model=\"ruleForm\"\r\n        :rules=\"rules\"\r\n        status-icon\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"name\">\r\n          <el-input v-model=\"ruleForm.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"pass\">\r\n          <el-input\r\n            v-model=\"ruleForm.pass\"\r\n            type=\"password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n          <el-input\r\n            v-model=\"ruleForm.checkPass\"\r\n            type=\"password\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model.number=\"ruleForm.email\"></el-input>\r\n          <el-button :plain=\"true\" @click=\"SendVerifyCode\">\r\n            发送验证码\r\n          </el-button>\r\n        </el-form-item>\r\n        <el-form-item label=\"验证码\" prop=\"verifyCode\">\r\n          <el-input v-model.number=\"ruleForm.verifyCode\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"submitForm('ruleForm')\" type=\"primary\">\r\n            提交\r\n          </el-button>\r\n          <el-button @click=\"resetForm('ruleForm')\">\r\n            重置\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    const validatePass = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入密码'));\r\n      } else {\r\n        if (this.ruleForm.checkPass !== '') {\r\n          this.$refs.ruleForm.validateField('checkPass');\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    const validatePass2 = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请再次输入密码'));\r\n      } else if (value !== this.ruleForm.pass) {\r\n        callback(new Error('两次输入密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const checkEmail = (rule, value, callback) => {\r\n      if (!value) {\r\n        callback(new Error('请输入邮箱'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      ruleForm: {\r\n        name: '',\r\n        pass: '',\r\n        checkPass: '',\r\n        email: '',\r\n        verifyCode: ''\r\n      },\r\n      rules: {\r\n        pass: [{ validator: validatePass, trigger: 'blur' }],\r\n        checkPass: [{ validator: validatePass2, trigger: 'blur' }],\r\n        email: [{ validator: checkEmail, trigger: 'blur' }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formName) {\r\n      const vm = this; // 在axios的then方法中this会失效，此处使用vm保存this指针\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          console.log('form is:' + JSON.stringify(this.ruleForm));\r\n          // 指定访问的URL\r\n          const url = '/community/userRegist';\r\n          this.$axios({\r\n            // 指定POST方法\r\n            method: 'POST',\r\n            // 指定数据格式\r\n            dataType: 'json',\r\n            // 指定访问的URL\r\n            url: url,\r\n            // 指定header\r\n            headers: {\r\n              'Content-Type': 'application/json;charset=UTF-8'\r\n            },\r\n            // 将data中的form存入axios.POST请求的数据节点中\r\n            data: JSON.stringify(this.ruleForm)\r\n            // then->接收返回响应\r\n          })\r\n            .then(function(res) {\r\n              console.log(res);\r\n              // 将响应res打印出来\r\n              console.log(JSON.stringify(res.data.resp_code));\r\n              let status = ''; // 使用status来控制$Message的提示类型\r\n              if (JSON.stringify(res.data.resp_code) !== '\"000000\"') {\r\n                status = 'error'; // 响应码为1，提示类型为错误\r\n              } else {\r\n                status = 'success'; // 响应码为0，提示类型为成功\r\n              }\r\n              vm.$message({\r\n                message: JSON.stringify(res.data.resp_info), // 取后台返回的响应信息\r\n                type: status // 指定响应类型\r\n              });\r\n              vm.$router.push('Login');\r\n            })\r\n            .catch(function(err) {\r\n              console.log(err);\r\n              vm.$message({\r\n                message: err, // 取后台返回的响应信息\r\n                type: 'error' // 指定响应类型\r\n              });\r\n            });\r\n        } else {\r\n          this.$message({\r\n            message: '请完善信息',\r\n            type: 'error'\r\n          });\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    SendVerifyCode() {\r\n      const vm = this; // 在axios的then方法中this会失效，此处使用vm保存this指针\r\n      console.log('send code to ' + this.ruleForm.email);\r\n      // 指定访问的URL\r\n      const url = '/community/getVerifyCode';\r\n      this.emailVerify.email = this.ruleForm.email;\r\n      this.$axios({\r\n        // 指定POST方法\r\n        method: 'POST',\r\n        // 指定数据格式\r\n        dataType: 'json',\r\n        // 指定访问的URL\r\n        url: url,\r\n        // 指定header\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=UTF-8'\r\n        },\r\n        // 将data中的form存入axios.POST请求的数据节点中\r\n        data: JSON.stringify(this.emailVerify)\r\n        // then->接收返回响应\r\n      })\r\n        .then(function(res) {\r\n          console.log(res);\r\n          // 将响应res打印出来\r\n          console.log(JSON.stringify(res.data.resp_info));\r\n          let status = ''; // 使用status来控制$Message的提示类型\r\n          if (JSON.stringify(res.data.resp_code) !== '0') {\r\n            status = 'error'; // 响应码为1，提示类型为错误\r\n          } else {\r\n            status = 'success'; // 响应码为0，提示类型为成功\r\n          }\r\n          vm.$message({\r\n            message: JSON.stringify(res.data.resp_info), // 取后台返回的响应信息\r\n            type: status // 指定响应类型\r\n          });\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n          vm.$message({\r\n            message: err, // 取后台返回的响应信息\r\n            type: 'error' // 指定响应类型\r\n          });\r\n        });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.register-header {\r\n  text-align: center;\r\n  font-size: 30px;\r\n  color: rgb(48, 214, 214);\r\n}\r\n.register-form {\r\n  padding-left: 350px;\r\n  padding-right: 350px;\r\n}\r\n</style>\r\n"]}]}